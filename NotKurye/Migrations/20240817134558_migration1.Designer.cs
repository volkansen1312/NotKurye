// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NotKurye.DB_Classları;

#nullable disable

namespace NotKurye.Migrations
{
    [DbContext(typeof(NotkuryeDbContext))]
    [Migration("20240817134558_migration1")]
    partial class migration1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DersOgrenci", b =>
                {
                    b.Property<string>("DerslerDersKodu")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("OgrencilerOgrenciNo")
                        .HasColumnType("bigint");

                    b.HasKey("DerslerDersKodu", "OgrencilerOgrenciNo");

                    b.HasIndex("OgrencilerOgrenciNo");

                    b.ToTable("DersOgrenci");
                });

            modelBuilder.Entity("NotKurye.DB_Classları.Akademisyen", b =>
                {
                    b.Property<long>("AkademikPersonelKimlikNo")
                        .HasColumnType("bigint");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DogumTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("MailAdres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parola")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Telefon")
                        .HasColumnType("bigint");

                    b.HasKey("AkademikPersonelKimlikNo");

                    b.ToTable("Akademisyenler");
                });

            modelBuilder.Entity("NotKurye.DB_Classları.Ders", b =>
                {
                    b.Property<string>("DersKodu")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Acts")
                        .HasColumnType("int");

                    b.Property<long>("AkademisyenAkademikPersonelKimlikNo")
                        .HasColumnType("bigint");

                    b.Property<string>("DersAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Kredi")
                        .HasColumnType("int");

                    b.HasKey("DersKodu");

                    b.HasIndex("AkademisyenAkademikPersonelKimlikNo");

                    b.ToTable("Dersler");
                });

            modelBuilder.Entity("NotKurye.DB_Classları.GonderilenMailIcerikleri", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("DersAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mesaj")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Not")
                        .HasColumnType("int");

                    b.Property<string>("OgrenciAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OgrenciMailHesabi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OgrenciNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OgrenciSoyadi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SinavTuru")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("MailIcerikleri");
                });

            modelBuilder.Entity("NotKurye.DB_Classları.Ogrenci", b =>
                {
                    b.Property<long>("OgrenciNo")
                        .HasColumnType("bigint");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DogumTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("MailAdres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Telefon")
                        .HasColumnType("bigint");

                    b.HasKey("OgrenciNo");

                    b.ToTable("Ogrenciler");
                });

            modelBuilder.Entity("DersOgrenci", b =>
                {
                    b.HasOne("NotKurye.DB_Classları.Ders", null)
                        .WithMany()
                        .HasForeignKey("DerslerDersKodu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NotKurye.DB_Classları.Ogrenci", null)
                        .WithMany()
                        .HasForeignKey("OgrencilerOgrenciNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NotKurye.DB_Classları.Ders", b =>
                {
                    b.HasOne("NotKurye.DB_Classları.Akademisyen", "Akademisyen")
                        .WithMany("Dersler")
                        .HasForeignKey("AkademisyenAkademikPersonelKimlikNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Akademisyen");
                });

            modelBuilder.Entity("NotKurye.DB_Classları.Akademisyen", b =>
                {
                    b.Navigation("Dersler");
                });
#pragma warning restore 612, 618
        }
    }
}
